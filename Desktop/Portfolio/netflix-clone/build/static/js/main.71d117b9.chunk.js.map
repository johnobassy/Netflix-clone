{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Nav.js","app.js","global-styles.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","src","poster_path","backdrop_path","alt","name","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMoives","fetchDocumentaries","Banner","setMovie","Math","floor","random","length","console","log","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","GlobalStyles","createGlobalStyle","render","document","getElementById"],"mappings":"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","file":"static/js/main.71d117b9.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create ({\n    baseURL: \"https://api.themoviedb.org/3\",\n\n\n});\n\nexport default instance;","import React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport './row.css';\nimport YouTube from 'react-youtube';\nimport movieTrailer from 'movie-trailer';\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row({title, fetchUrl, isLargeRow}) {\n   const [movies, setMovies] = useState ([]);\n   const [trailerUrl, setTrailerUrl] = useState(\"\");\n\n   useEffect(() => {\n    async function fetchData(){\n        const request = await axios.get(fetchUrl); \n        setMovies(request.data.results)\n        return request;\n    }\n    fetchData();\n    } ,[fetchUrl]); \n\n    const opts = {\n        height: '390',\n        width: '100%',\n        playerVars: {\n        autoplay: 1,\n        },\n    };\n  \n        const handleClick = (movie) => {\n            if (trailerUrl) {\n                setTrailerUrl(\"\");\n            } else {\n                movieTrailer(movie?.name || \"\")\n                .then((url) => {\n                const urlParams = new URLSearchParams(new URL(url).search);\n                setTrailerUrl(urlParams.get('v'));\n                })\n                .catch((error) => console.log(error));\n            }\n        }\n   return (\n        <div className=\"row\">\n            <h2> {title} </h2>\n            <div className= {`row_posters ${isLargeRow && \"row_posterLarge\"}`}>\n                 {}\n                {movies.map(movie => (\n                   <img key={movie.id}\n                    className=\"row_poster\" \n                    src={`${base_url}${isLargeRow ? movie.poster_path: movie.backdrop_path}`} \n                    alt={movie.name}\n                    /> \n                ))}\n            </div>\n                 {trailerUrl &&  <YouTube videoId={trailerUrl} opts={opts} />}\n        </div>\n    )\n}\n\nexport default Row\n","const API_KEY = \"1b1d31ec306ca24aa3346fee3bce4255\";\n\nconst requests = {\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMoives:`/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n\n}\n\nexport default requests","import React, {useState, useEffect} from 'react'\nimport axios from './axios';\nimport requests from './requests';\nimport './Banner.css';\n\nfunction Banner() {\nconst [movie, setMovie] = useState ([]);\n    \nuseEffect (() => {\n        async function fetchData() {\n        const request = await axios.get(requests.fetchNetflixOriginals);\n        setMovie(\n            request.data.results[\n            Math.floor(Math.random() * request.data.results.length - 1)\n            ]\n        );\n        return request;\n        }\n        fetchData();\n    } , []);\n    \n    console.log(movie);\n    \n    function truncate(str, n){\n        return str?.length > n ? str.substr(0, n - 1) + \"...\": str;\n    }\n\n\n    return (\n       \n        <header className= \"banner\"\n         style= {{\n             backgroundSize: \"cover\", \n             backgroundImage: `url(\n                \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\n             )`,\n             backgroundPosition: \"center center\",\n         }} > \n            \n            <div className=\"banner_contents\">\n\n            <h1 className= \"banner_title\">\n            {movie?.title || movie?.name || movie?.original_name}\n            </h1>\n\n            \n            <div className=\"banner_buttons\">\n                <button className=\"banner_button\">Play</button>\n                <button className=\"banner_button\">My list</button>\n\n            </div>\n             <h1 className=\"banner_description\">\n                 {movie?.overview}\n\n             </h1>\n\n            \n            </div>\n            <div className=\"banner--fadeBottom\" />\n        </header>\n    )\n}\n\nexport default Banner\n","import React, {useState, useEffect} from 'react'\nimport './Nav.css';\n\nfunction Nav() {\n    const [show, handleShow] = useState(false);\n\n    useEffect(() => { \n        window.addEventListener(\"scroll\", () => {\n       if (window.scrollY > 100) {\n           handleShow(true);\n       } else handleShow(false);\n    });\n        return () => {\n         window.removeEventListener(\"scroll\");\n    };\n    }, []);\n\n    return (\n        <div className={`nav ${show && 'nav_black'}`}>\n            <img\n            className=\"nav_logo\"\n            src=\"https://image.tmdb.org/t/p/w500/wwemzKWzjKYJFfCeiB57q3r4Bcm.png\"\n            alt=\"Netflix Logo\"           \n           />\n\n           <img\n           className=\"nav_avatar\"\n           src=\"https://img.pngio.com/avatar-black-man-beard-black-man-job-icon-png-and-vector-for-black-man-png-free-512_512.png\"\n           alt=\"Netflix Logo\"\n           />\n        </div>\n    )\n}\n\nexport default Nav\n","import React from 'react';\nimport Row from './Row';\nimport requests from './requests';\nimport Banner from './Banner';\nimport './app.css';\nimport Nav from './Nav';\n\nexport default function App() {\n  return (\n   <div className=\"app\">\n\n      <Nav />\n\n       <Banner />\n     \n     <Row title=\"NETFLIX ORIGINALS\" fetchUrl={requests.fetchNetflixOriginals} isLargeRow={true}/>\n     <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n     <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n     <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n     <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n     <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n     <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMoives} />\n     <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n     \n\n\n   </div>\n\n  );\n}\n\n\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle`\n    html, body {\n        font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        background-color: black;\n        color: #333333;\n        font-size: 16px;\n    }\n`;","import React from 'react';\nimport { render } from 'react-dom';\nimport 'normalize.css';\nimport App from './app';\nimport { GlobalStyles } from './global-styles';\n\nrender(\n<>\n<GlobalStyles />\n<App />\n</>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}